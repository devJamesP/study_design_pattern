[패턴 카탈로그에 수록된 패턴 분류하기]
1. 생성 관련 패턴(creational pattern)
객체 인스턴스 생성을 위한 패턴으로, 클라이언트와
그 클라이언트에서 생성해야 할 객체 인스턴스 사이의 연결을 끊어주는 패턴이다.

2. 행동 관련 패턴(behavioral pattern)
클래스와 객체들이 상호작용하는 방법 및 역할을 분담하는 방법과 관련된 패턴이다.

3. 구조 관련 패턴(structural pattern)
클래스 및 객체들을 구성을 통해서 더 큰 구조로 만들 수 있게 해 주는 것과 관련된 패턴이다.

<범주별 분류>
================ 생성 관련 패턴 =================
추상 팩토리
팩토리 메소드
싱글턴

(뷜더)
(프로토타입)


================ 행동 관련 패턴 =================
템플릿 메소드
스트래티지
스테이트
이터레이터
커맨드
옵저버

(인터프리터)
(역할 변경)
(비지터)
(미디에이터)
(메멘토)


================ 구조 관련 패턴 =================
퍼사드
어댑터
프록시
데코레이터
컴포지트

(플라이웨이트)
(브리지)


<종류별 분류>
1. 클래스 패턴(class pattern)
클래스 사이의 관계가 상속을 통해서 어떤 식으로 정의되는지를 다룬다.
클래스 패턴에서는 컴파일시에 관계가 결정된다.

2.  객체 패턴(object pattern)
객체 사이의 관계를 다루며, 객체 사이의 관계는 보통 구성을 통해서 정의된다.
객체 패턴에서는 일반적으로 실행중에 관계가 생성되기 때문에 더 동적이고 유연하다.

================ 클래스 관련 패턴 =================
팩토리 메소드
템플릿 메소드
어댑터



================ 객체 관련 패턴 =================
컴포지트
데코레이터
프록시
스트래티지
퍼사드
커맨드
이터레이터
옵저버
스테이트
싱글턴
추상팩토리