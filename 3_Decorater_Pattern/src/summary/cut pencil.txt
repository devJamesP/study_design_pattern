[cut pencil 1]
public class Beverage {
    public double cost() {
        return 1230.0;
    }
}

public class DarkRoast extends Beverage {
    public DarkRoast() {
        description = "최고의 다크 로스트 커피";
    }
    public double cost() {
        double coffeeCost = super.cost();
        if (hasMilk()) {
            coffeeCost += 200;
        }
        if (hasSoy()) {
            coffeeCost += 300;
        }
        ...
        return coffeeCost;
    }
}

기존의 Beverage를 상속 혹은 구현하는 클래스들이 굉장히 많이 늘어나므로
이를 개선하기 위해 일종의 군을 설정, (에스프레소, 모카, 다크 로스트 등등)

이 프로젝트의 요구사항이나 요인 중에서 나중에 변경되었을 때 디자인에 영향을 미칠만한 것들이 있다면?
- 첨가물 가격이 오르거나 내릴 때마다 일일이 수정해야 한다.
- 첨가물의 종류가 많아지면 새로운 메소드를 추가해야하고, 수퍼클래스의 cost()도 고쳐야 함.
- 새로운 음료 출시 시, 새로운 첨가물도 필요해 짐, 단순한 음료에서도 필요하지 않은 부분들을 상속해야 함.
- 특정 첨가물이 중복되는 경우에는?
- 추가적인 첨가물을 요청 하는 경우
- 새로운 방식의 음료 만드는 방법이 도입되는 경우 이부분에도 기존의 첨가물들을 전부 추가해주어야 함.


[cut pencil 2]
스타버즈 음료 만들기!! : 모카 + 모카 + 두유 + 에스프레소 섞을 것!

[cut pencil 3]
스타버즈에서 사이즈 개념을 도입하기로 했습니다. 이제 커피를 톨, 그란데, 벤티(중간, 큰 것, 아주 큰 것) 중에서
골라서 주문 할 수 있다. 스타버즈에서는 이런 변화가 커피 클래스 전체에 영향을 미칠 것으로 간주하고 Beverage 클래스에
setSize()와 getSize()라는 두 개의 메소드를 추가했다. 그리고 사이즈에 따라서 첨가물 가격도 다르게 받을 계획이다.
예를 들어 두유 가격을 톨에서는 10센트, 그란데에서는 15센트, 벤티에서는 20센트로 책정하기로 했다.
이런 변경 사항을 처리하려면 데코레이터 클래스를 어떤 식으로 고치면 될까?

Beverage라는 추상클래스를 상속하는 추상클래스 Size를 만들고
이 Size를 상속하는 톨, 그란데, 벤티를 추가하고
이들은 beverage구성 객체를 갖으며
이를 설정했을 때 cost에 추가 계산?