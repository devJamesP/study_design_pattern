[1]
이터레이터 패턴용 클래스 다이어그램은 전에 배웠던 어떤 패턴의 클래스 다이어그램과 상당히 유사합니다.
어떤 패턴인지 아시나요? (어떤 객체를 생성할지를 서브클래스에서 결정) : 팩토리 패턴

[2]
다음 클래스들을 살펴보고 여러 역할을 맡고 있는 클래스를 찾아 보자. (378p)
DeckOfCards클래스에는 Iterator의 반복자 기능을 포함하고 있으므로 여러 역할을 수행한다고 볼 수 있다.

[3]
클래스의 응집도가 높은지 낮은지 판단하기
Game클래스는 응집도가 낮다. 로그인, 플레이어 동작, 플레이어 기능을 모조리 가지고 있다.
오른쪽의 GameSession, PlayerActions, Player클래스는 응집도가 높다.

[4]
Waitress에서는 여전히 printMenu()를 메뉴마다 한 번씩, 총 세 번 호출해야 한다. 메뉴를 전부 합쳐서 메소드를 한 번만
호출할 수는 없을까? 아니면 반복자 하나만 가지고 모든 메뉴에 대해서 반복작업을 처리할 수 있는 방법은 없을까?
