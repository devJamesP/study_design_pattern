1. 사용자 인터페이스 패키지에서 사용하는 구성요소에 이 패턴이 적용되어 있는 경우를 종종 볼 수 있습니다. : composite(컴포지트)
1. (세로) 복합 객체에 들어있는 것 : components(구성요소)
2. 자바 기능을 갖춘 __을 만들었습니다. : waitress(웨이트리스)
3. Collection과 Iterator가 들어있는 패키지 : java.util
4. 이 클래스에서 원래 반복자를 제공하기 때문에 pancakeHouseMenuIterator는 지워버렸습니다. : arrayList
5. 이것도 캡슐화 할 수 있습니다 : factorymethod(팩토리 메소드)
6. 컬렉션에 있는 모든 원소에 대해 반복작업을 할 때 쓸 수 있는 객체 : iterator(이터레이터)
7. CompositeIterator에서 이걸 썼었죠 : recursion(재귀호출)
8. 반복자는 보통 이 패턴을 써서 만듭니다 : Iterator(이터레이터)
9. 구성요소는 복합 객체일 수도 있고 __일 수도 있습니다. : leaf(잎 객체)
10. 객체마을 식당과 합병된 가게 이름 : pancakehouse(팬케이크 하우스)
11. Hashtable과 ArrayList는 둘 다 이 인터페이스를 구현합니다. : Collection
12. 자식이 없습니다. : leaf(잎)
13. 한 클래스에서는 한 가지 역할만 맡아야 한다는 원칙 : single responsibillity(단일 역할 원칙)
14. 세 번째로 합병된 가게 이름 : cafe(객체마을 카페)
15. 한 클래스가 __되는 이유는 한 가지 뿐이어야 합니다. : change(변화/변경)
16. 이 클래스에서는 Iterator를 간접적으로 지원합니다. : hashtable(해시테이블)
17. 이 메뉴 때문에 코드를 완전히 고쳐야 했었죠. : dessert(디저트)