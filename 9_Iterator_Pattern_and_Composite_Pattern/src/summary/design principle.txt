[디자인 원칙]
- 클래스를 바꾸는 이유는 한 가지 뿐이어야 한다.
응집도(cohesion)란 한 클래스 또는 모듈이 특정 목적 또는 역할을 얼마나 일관되게 지원하는지를 나타내는 척도라고 할 수 있다.
어떤 모듈 또는 클래스의 응집도가 높다는 것은 일련의 연관된 기능이 묶여있다는 것을, 응집도가 낮다는 것은 서로 상관 없는
기능들이 묶여있다는 것을 뜻한다.

응집도는 단일 역할 원칙에서만 쓰이는 용어는 아니고 좀 더 광범위한 용도로 쓰이는 용어이다.
위 원칙을 잘 따르는 클래스는 두 개 이상의 역할을 맡고 있는 클래스에 비해 응집도가 높고, 관리하기도 더 용이한 편이다.

!!
1. 상속보다는 구성을 사용한다.
2. 특정 구현보다는 인터페이스에 맞춰서 프로그래밍한다.
3. 변하는 부분과 변하지 않는 부분을 나누고 변하는 부분을 캡슐화 한다.
4. 클래스 확장에 대해서는 열려있고 변경에 대해서는 닫는다(OCL)
5. 서로 상호작용 하는 객체들은 느슨하게 결합한다.
6. 추상화 된 것에 의존한다. (구상 클래스에 의존하지 않는다.)
7. 최소 지식의 원칙 (친한 친구랑만 연락한다.)
8. 헐리우드 원칙 (먼저 연락하지 마세요. 저희가 연락 드리겠습니다.)
9. 단일 역할의 원칙 (어떤 클래스가 바뀌게 되는 이유는 한가지 뿐이어야 한다.)

