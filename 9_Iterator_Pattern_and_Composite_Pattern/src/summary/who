누가 무엇을 할까?

스테이트 패턴 : 어떤 상태가 바뀜에 따라 객체의 행동을 바꿀 수 있습니다.
어댑터 패턴 : 하나 이상의 클래스의 인터페이스를 변환합니다.
이터레이터 패턴 : 컬렉션의 구현을 드러내지 않으면서도 컬렉션에 있는 모든 객체들에 대해 반복작업을 할 수 있습니다.
퍼사드 패턴 : 일련의 클래스들에 대한 인터페이스를 단순화시킵니다.
컴포지트 패턴 : 클라이언트에서 객체 컬렉션과 개별 객체를 똑같은 식으로 처리 할 수 있습니다.
옵저버 패턴 : 어떤 상태가 변경되었을 떄 일련의 객체들한테 연락을 할 수 있습니다.